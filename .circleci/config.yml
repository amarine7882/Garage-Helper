version: 2
jobs:
  test-and-build:
    docker:
      - image: circleci/node:10.11

    working_directory: ~/Garage-Helper

    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies{{ checksum "package.json" }}
            - dependencies

      - run:
          name: Install dependencies
          command: yarn install

      - save_cache:
          key: dependencies{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: Run tests
          command: yarn test

      - run:
          name: Create config files
          command: |
            touch server/config
            echo "exports.MONGO_USER = undefined;" >> server/config
            echo "exports.MONGO_PASS = undefined;" >> server/config
            touch tf/terraform.tfvars
            echo "TAG = "$CIRCLE_BUILD_NUM"" >> tf/terraform.tfvars

      - run:
          name: Build bundles
          command: |
            yarn run build:server:p
            yarn run build:p

      - save_cache:
          key: bundle/tf
          paths:
            - ~/Garage-Helper/production/app/bundle.js
            - ~/Garage-Helper/tf

      - setup_remote_docker

      - run:
          name: Build and push Docker image
          command: |
            cd production/server/
            TAG=0.1.$CIRCLE_BUILD_NUM
            docker build -t amarine7882/garage-helper:$TAG .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push amarine7882/garage-helper:$TAG

  deploy:
    docker:
      - image: circleci/python:2.7-jessie

    working_directory: ~/Garage-Helper

    steps:

      - restore_cache:
          key: bundle/tf

      - restore_cache:
          key: tf_state

      - run:
          name: Install awscli
          command: sudo pip install awscli

      - run:
          name: Push to S3
          command: aws s3 cp ~/Garage-Helper/production/app/bundle.js s3://garage-helper/app/ --content-type application/javascript --content-encoding gzip --acl public-read

      - run:
          name: Install terraform
          command: |
            wget https://releases.hashicorp.com/terraform/0.9.8/terraform_0.9.8_linux_amd64.zip
            unzip terraform_0.9.8_linux_amd64.zip
            sudo mv terraform /usr/local/bin/

      - run:
          name: Set up deploy envs
          command: |
            cd tf
            touch env.list
            echo "MONGO_USER=$MONGO_USER" >> env.list
            echo "MONGO_PASS=$MONGO_PASS" >> env.list
            echo "AWS_ACCESS_KEY_ID = "$AWS_ACCESS_KEY_ID"" >> terraform.tfvars
            echo "AWS_SECRET_ACCESS_KEY = "$AWS_SECRET_ACCESS_KEY"" >> terraform.tfvars

      - run:
          name: Decrypt aws key
          command: |
            cd tf
            openssl aes-256-cbc -d -in garage-helper-cipher.pem -out garage-helper.pem -k $CIPHER_KEY

      - run:
          name: Initialize terraform
          command: |
            terraform init

      - run:
          name: Destroy previous deploy
          command: terraform destroy -auto-approve

      - run:
          name: Deploy
          command: terraform apply -auto-approve

      - save_cache:
          key: tf_state
          paths:
            - ~/Garage-Helper/tf/terraform.tfstate



workflows:
  version: 2
  test-build-deploy:
    jobs:
      - test-and-build:
          filters:
            branches:
              only: master

      - deploy:
          requires:
            - test-and-build
          filters:
            branches:
              only: master